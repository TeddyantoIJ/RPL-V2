/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TransaksiPengambilanBarang;

import MainMenu.Login;
import connection.DBConnect;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Polman
 */
public class permintaan_Pick_Up extends javax.swing.JFrame {

    /**
     * Creates new form permintaan_Pick_Up
     */
    private DefaultTableModel model;
    private DefaultTableModel model1;

    public permintaan_Pick_Up() {
        initComponents();

        model = new DefaultTableModel();
        model1 = new DefaultTableModel();
        tableDriver.setModel(model);
        tableDetail.setModel(model1);

        addColomn();
        loadData();
    }
    private String alamat_penjemputan = null;
    private String kota_penjemputan = null;
    
    
    public permintaan_Pick_Up(String alamat, String kota, String id) {
        initComponents();

        
        //System.out.println("INI ID!  "+id);
        kota_penjemputan = kota;
        alamat_penjemputan = alamat;
        txtid_barang.setText(id);
        
        model = new DefaultTableModel();
        model1 = new DefaultTableModel();
        tableDriver.setModel(model);
        tableDetail.setModel(model1);

        addColomn();
        loadData();
    }
    private String kantorCabang ="";
    public permintaan_Pick_Up(String alamat, String kota, String id, String kantorCabang) {
        initComponents();
        this.kantorCabang = kantorCabang;
        
        //System.out.println("INI ID!  "+id);
        kota_penjemputan = kota;
        alamat_penjemputan = alamat;
        txtid_barang.setText(id);
        
        model = new DefaultTableModel();
        model1 = new DefaultTableModel();
        tableDriver.setModel(model);
        tableDetail.setModel(model1);

        addColomn();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        rbTidak = new javax.swing.JRadioButton();
        rbAktif = new javax.swing.JRadioButton();
        rbSemua = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDriver = new javax.swing.JTable();
        btnSimpan = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableDetail = new javax.swing.JTable();
        txtid_barang = new javax.swing.JLabel();
        txtid_driver = new javax.swing.JLabel();
        txtStatus = new javax.swing.JLabel();
        txtnama_driver = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1200, 700));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Pilih Driver");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Daftar Driver");

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Status Pick Up Driver");

        rbTidak.setBackground(new java.awt.Color(204, 204, 255));
        rbTidak.setText("Tidak Aktif");
        rbTidak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTidakActionPerformed(evt);
            }
        });

        rbAktif.setBackground(new java.awt.Color(204, 204, 255));
        rbAktif.setText("Aktif");
        rbAktif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAktifActionPerformed(evt);
            }
        });

        rbSemua.setBackground(new java.awt.Color(204, 204, 255));
        rbSemua.setSelected(true);
        rbSemua.setText("Semua");
        rbSemua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSemuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbAktif)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbTidak)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbSemua)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbAktif)
                    .addComponent(rbTidak)
                    .addComponent(rbSemua))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableDriver.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tableDriver.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableDriver.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDriverMouseClicked(evt);
            }
        });
        tableDriver.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableDriverKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tableDriver);

        btnSimpan.setBackground(new java.awt.Color(204, 255, 204));
        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnBatal.setBackground(new java.awt.Color(204, 255, 204));
        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        jLabel4.setText("ID Driver");

        jLabel5.setText("Nama");

        tableDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tableDetail);

        txtid_barang.setText("NULL");

        txtid_driver.setPreferredSize(new java.awt.Dimension(12, 5));

        txtStatus.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSimpan))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(txtid_barang))
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE)
                            .addComponent(jScrollPane3)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(txtid_driver, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(55, 55, 55)
                                        .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtnama_driver, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(313, 313, 313))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtid_barang))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(txtStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtid_driver, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBatal)
                            .addComponent(btnSimpan)))
                    .addComponent(txtnama_driver, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 51));
        jPanel3.setPreferredSize(new java.awt.Dimension(240, 700));

        jLabel23.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Keluar");
        jLabel23.setToolTipText("");
        jLabel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel23MouseClicked(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Trebuchet MS", 0, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MainMenu/b.png"))); // NOI18N
        jLabel25.setToolTipText("");
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel25)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 471, Short.MAX_VALUE)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void penjemputan() {
        Object[] options = {"Yaa, simpan",
            "Tidak, batal"};
        int n;
        penjemputan:
        {
            n = JOptionPane.showOptionDialog(this,
                    "Penjemputan barang akan dilakukan oleh :\n"
                    + "ID Driver  : " + txtid_driver.getText()
                    + "\nNama       : " + txtnama_driver.getText(),
                    "Pertanyaan",
                    JOptionPane.YES_NO_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null,
                    options,
                    options[1]);
        }
        if (n == 0) {
            JOptionPane.showMessageDialog(this,
                    "Driver dipilih!");
            inputPickUp();
        } else if (n == 1) {
            batalPenjemputan();
        }
    }

    private void batalPenjemputan() {
        int n;
        Object[] options1 = {"Ya, batal",
            "Tidak, lanjutkan"};
        n = JOptionPane.showOptionDialog(this,
                "Yakin akan membatalkan pemilihan?",
                "Pertanyaan",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options1,
                options1[1]);

        if (n == 1) {
            penjemputan();
        }
    }
    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:

        if (txtStatus.getText() == "" || txtStatus.getText().equals("Aktif") || txtid_barang.getText().equals("NULL")) {
//            JOptionPane.showMessageDialog(this,
//                    "Pilih Driver dengan benar!");
        } else {
            penjemputan();
        }


    }//GEN-LAST:event_btnSimpanActionPerformed

    private void rbAktifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAktifActionPerformed
        // TODO add your handling code here:
        rbTidak.setSelected(false);
        rbSemua.setSelected(false);
        if (rbAktif.isSelected() == true) {
            model.getDataVector().removeAllElements();

            model.fireTableDataChanged();

            try {
                DBConnect connection = new DBConnect();
                connection.stat = connection.conn.createStatement();
                String query = "select * from Driver";
                connection.result = connection.stat.executeQuery(query);

                while (connection.result.next()) {
                    Object[] obj = new Object[3];
                    obj[0] = connection.result.getString("ID_Staff");
                    obj[1] = connection.result.getString("nama_staff");
                    obj[2] = connection.result.getString("Status_pickup");

                    if (obj[2].equals("Aktif")) {
                        model.addRow(obj);
                    }
                }
                connection.stat.close();
                connection.result.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal111!\n" + e.toString());
            }
        } else {
            rbAktif.setSelected(true);
        }
    }//GEN-LAST:event_rbAktifActionPerformed

    private void inputPickUp() {
        DBConnect connection = new DBConnect();
        try {
            String query = "insert into detailPickUp values (?,?,'Belum',?,?)";
            connection.pstat = connection.conn.prepareStatement(query);
            
            
            connection.pstat.setString(1, txtid_driver.getText());
            connection.pstat.setString(2, txtid_barang.getText());
            connection.pstat.setString(3, alamat_penjemputan);
            connection.pstat.setString(4, kota_penjemputan);

            connection.pstat.executeUpdate();
            connection.pstat.close();
            JOptionPane.showMessageDialog(this, "Berhasil!\n");
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal!\n" + e.toString());
        }
    }
    private void rbTidakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTidakActionPerformed
        // TODO add your handling code here:
        rbAktif.setSelected(false);
        rbSemua.setSelected(false);
        if (rbTidak.isSelected() == true) {
            model.getDataVector().removeAllElements();

            model.fireTableDataChanged();

            try {
                DBConnect connection = new DBConnect();
                connection.stat = connection.conn.createStatement();
                String query = "select * from Driver";
                connection.result = connection.stat.executeQuery(query);

                while (connection.result.next()) {
                    Object[] obj = new Object[3];
                    obj[0] = connection.result.getString("ID_Staff");
                    obj[1] = connection.result.getString("nama_staff");
                    obj[2] = connection.result.getString("Status_pickup");

                    if (obj[2].equals("Tidak aktif")) {
                        model.addRow(obj);
                    }
                }
                connection.stat.close();
                connection.result.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal111!\n" + e.toString());
            }
        } else {
            rbTidak.setSelected(true);
        }
    }//GEN-LAST:event_rbTidakActionPerformed

    private void rbSemuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSemuaActionPerformed
        // TODO add your handling code here:
        rbTidak.setSelected(false);
        rbAktif.setSelected(false);
        if (rbSemua.isSelected() == true) {
            model.getDataVector().removeAllElements();

            model.fireTableDataChanged();

            try {
                DBConnect connection = new DBConnect();
                connection.stat = connection.conn.createStatement();
                String query = "select * from Driver";
                connection.result = connection.stat.executeQuery(query);

                while (connection.result.next()) {
                    Object[] obj = new Object[3];
                    obj[0] = connection.result.getString("ID_Staff");
                    obj[1] = connection.result.getString("nama_staff");
                    obj[2] = connection.result.getString("Status_pickup");

                    model.addRow(obj);

                }
                connection.stat.close();
                connection.result.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal111!\n" + e.toString());
            }
        } else {
            rbSemua.setSelected(true);
        }
    }//GEN-LAST:event_rbSemuaActionPerformed

    private void tableDriverKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableDriverKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_tableDriverKeyPressed

    private void tableDriverMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDriverMouseClicked
        // TODO add your handling code here:
        int i = tableDriver.getSelectedRow();
        if (i == -1) {
            return;
        }
        txtid_driver.setText((String) model.getValueAt(i, 0));
        txtnama_driver.setText((String) model.getValueAt(i, 1));
        txtStatus.setText((String) model.getValueAt(i, 2));
        
        fillTableDetail();
    }//GEN-LAST:event_tableDriverMouseClicked

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Tidak dapat membatalkan transaksi pick-up!\n");
    }//GEN-LAST:event_btnBatalActionPerformed

    private void jLabel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseClicked
        Login t= new Login();
        t.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel23MouseClicked

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel25MouseClicked
    public void fillTableDetail(){
            model1.getDataVector().removeAllElements();

            model1.fireTableDataChanged();

            try {
                DBConnect connection = new DBConnect();
                connection.stat = connection.conn.createStatement();
                String query = "select * from detailPickUp where ID_Staff = '"+txtid_driver.getText()+"' and keterangan = 'Belum'";
                connection.result = connection.stat.executeQuery(query);

                while (connection.result.next()) {
                    Object[] obj = new Object[4];
                    obj[0] = connection.result.getString("id_pemesanan");
                    obj[1] = connection.result.getString("alamat_penjemputan");
                    obj[2] = connection.result.getString("kota_penjemputan");
                    obj[3] = connection.result.getString("keterangan");


                    model1.addRow(obj);

                }
                connection.stat.close();
                connection.result.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal111!\n" + e.toString());
            }
    }
    private String getIDKantor(String in) {
        DBConnect connection = new DBConnect();
        try {
            connection.stat = connection.conn.createStatement();
            String query = "select kode_kantor_cabang from KantorCabang where nama_kantor = '" + in + "'";
            connection.result = connection.stat.executeQuery(query);
            String output = null;
            while (connection.result.next()) {

                output = (connection.result.getString("kode_kantor_cabang"));

            }
            connection.stat.close();
            connection.result.close();
            return output;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error!!\n" + e.toString());
        }
        return null;
    }
    public void loadData() {
        model.getDataVector().removeAllElements();

        model.fireTableDataChanged();

        try {
            DBConnect connection = new DBConnect();
            connection.stat = connection.conn.createStatement();
            String query = "select * from Driver where status_aktif = 'Aktif' and kode_kantor_cabang = '"+getIDKantor(kantorCabang)+"'";
            connection.result = connection.stat.executeQuery(query);

            while (connection.result.next()) {
                Object[] obj = new Object[3];
                obj[0] = connection.result.getString("ID_Staff");
                obj[1] = connection.result.getString("nama_staff");
                obj[2] = connection.result.getString("Status_pickup");

                model.addRow(obj);

            }
            connection.stat.close();
            connection.result.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal111!\n" + e.toString());
        }
    }

    public void addColomn() {
        model.addColumn("ID Driver");
        model.addColumn("Nama Driver");
        model.addColumn("Status Pick Up");

        model1.addColumn("ID Barang");
        model1.addColumn("Tempat Penjemputan");
        model1.addColumn("Kota Penjemputan");
        model1.addColumn("Keterangan");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(permintaan_Pick_Up.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(permintaan_Pick_Up.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(permintaan_Pick_Up.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(permintaan_Pick_Up.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new permintaan_Pick_Up().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton rbAktif;
    private javax.swing.JRadioButton rbSemua;
    private javax.swing.JRadioButton rbTidak;
    private javax.swing.JTable tableDetail;
    private javax.swing.JTable tableDriver;
    private javax.swing.JLabel txtStatus;
    private javax.swing.JLabel txtid_barang;
    private javax.swing.JLabel txtid_driver;
    private javax.swing.JLabel txtnama_driver;
    // End of variables declaration//GEN-END:variables
}
