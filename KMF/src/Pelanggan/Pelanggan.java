package Pelanggan;

import MainMenu.MainMenu;
import connection.DBConnect;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.awt.event.KeyEvent;
import javax.swing.table.DefaultTableModel;

public class Pelanggan extends javax.swing.JFrame {
    public Statement st;
    public ResultSet rs;
    public DBConnect cn = new DBConnect();
    public DefaultTableModel tabModel;
    
    public void tampil() {
  Object[] tampil = {
    "ID", "Nama", "No Hp", "Alamat", "Provinsi"
  };
  
  tabModel = new DefaultTableModel(null, tampil);
  tabelPelanggan.setModel(tabModel);
}

public void tampilData() {
        tabModel.getDataVector().removeAllElements();

        tabModel.fireTableDataChanged();

        try {
            DBConnect connection = new DBConnect();
            connection.stat = connection.conn.createStatement();
            String query = "select * from Pelanggan";
            connection.result = connection.stat.executeQuery(query);

            while (connection.result.next()) {
                Object[] obj = new Object[5];
                obj[0] = connection.result.getString("id_pelanggan");
                obj[1] = connection.result.getString("nama_pelanggan");
                obj[2] = connection.result.getString("alamat_pelanggan");
                obj[3] = connection.result.getString("provinsi_pelanggan");
                obj[4] = connection.result.getString("no_telphone");

                tabModel.addRow(obj);
            }
            connection.stat.close();
            connection.result.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal111!\n" + e.toString());
        }

}

public void FilterHuruf(KeyEvent a) {
        if (Character.isDigit(a.getKeyChar())) {
            a.consume();
            
            JOptionPane.showMessageDialog(null, "Masukan Hanya Huruf", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }
 
   
    public void FilterAngka(KeyEvent b) {
        if (Character.isAlphabetic(b.getKeyChar())) {
            b.consume();
            
            JOptionPane.showMessageDialog(null, "Masukan Hanya Angka", "Peringatan", JOptionPane.WARNING_MESSAGE);
        }
    }
    
 
    
public void reset() {
  idPelanggan.setText("");
  namaPelanggan.setText("");
  noHpPelanggan.setText("");
  alamatPelanggan.setText("");
  provinsiPelanggan.setText("");
  
  tampil();
  tampilData();
}
    private boolean baru;
    public Pelanggan(boolean baru) {
        initComponents();
        tampil();
        tampilData();
        this.baru = baru;
  
  hapusPelanggan.setEnabled(false);
  ubahPelanggan.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tambahPelanggan = new javax.swing.JButton();
        ubahPelanggan = new javax.swing.JButton();
        hapusPelanggan = new javax.swing.JButton();
        kembaliPelanggan = new javax.swing.JButton();
        cariPelanggan = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        idPelanggan = new javax.swing.JTextField();
        provinsiPelanggan = new javax.swing.JTextField();
        alamatPelanggan = new javax.swing.JTextField();
        namaPelanggan = new javax.swing.JTextField();
        noHpPelanggan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPelanggan = new javax.swing.JTable();
        resetbtn = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tambahPelanggan.setText("TAMBAH");
        tambahPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahPelangganActionPerformed(evt);
            }
        });

        ubahPelanggan.setText("UBAH");
        ubahPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahPelangganActionPerformed(evt);
            }
        });

        hapusPelanggan.setText("HAPUS");
        hapusPelanggan.setEnabled(false);
        hapusPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusPelangganActionPerformed(evt);
            }
        });

        kembaliPelanggan.setText("KEMBALI");
        kembaliPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliPelangganActionPerformed(evt);
            }
        });

        cariPelanggan.setText("CARI");
        cariPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariPelangganActionPerformed(evt);
            }
        });

        jLabel1.setText("FORM PELANGGAN");

        jLabel2.setText("ID ");

        jLabel3.setText("NAMA");

        jLabel4.setText("NO HP");

        jLabel5.setText("ALAMAT");

        jLabel6.setText("PROVINSI");

        idPelanggan.setName(""); // NOI18N

        provinsiPelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                provinsiPelangganKeyTyped(evt);
            }
        });

        alamatPelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                alamatPelangganKeyTyped(evt);
            }
        });

        namaPelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                namaPelangganKeyTyped(evt);
            }
        });

        noHpPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noHpPelangganActionPerformed(evt);
            }
        });
        noHpPelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                noHpPelangganKeyTyped(evt);
            }
        });

        tabelPelanggan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "NAMA", "NO HP", "ALAMAT", "PROVINSI"
            }
        ));
        tabelPelanggan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelPelangganMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelPelanggan);

        resetbtn.setText("RESET");
        resetbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(tambahPelanggan)
                        .addGap(18, 18, 18)
                        .addComponent(ubahPelanggan)
                        .addGap(18, 18, 18)
                        .addComponent(hapusPelanggan)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resetbtn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(kembaliPelanggan))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noHpPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(provinsiPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alamatPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(namaPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cariPelanggan)))))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cariPelanggan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(namaPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(noHpPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(alamatPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(provinsiPelanggan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tambahPelanggan)
                    .addComponent(ubahPelanggan)
                    .addComponent(hapusPelanggan)
                    .addComponent(resetbtn))
                .addGap(25, 25, 25)
                .addComponent(kembaliPelanggan)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kembaliPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliPelangganActionPerformed
        if(baru){
            this.setVisible(false);
        }else{
            MainMenu m = new MainMenu();
            m.setVisible(true);
            this.setVisible(false);
        }
        
// TODO add your handling code here:
    }//GEN-LAST:event_kembaliPelangganActionPerformed
private String getLastID(){
        DBConnect connection = new DBConnect();
        try{
            connection.stat = connection.conn.createStatement();
                String query = "select count(id_pelanggan) Total from Pelanggan";
                connection.result = connection.stat.executeQuery(query);
                int count = 0;
                while (connection.result.next()) {
                    
                    count = Integer.parseInt(connection.result.getString("Total"));
                    }
                connection.stat.close();
                connection.result.close();
                
                
                count++;
                
                if(Integer.toString(count).length() == 1)
            {
                return "000" + count;
            }
            else if (Integer.toString(count).length() == 2)
            {
                return "00" + count;
            }
            else if (Integer.toString(count).length() == 3)
            {
                return "0" + count;
            }
            else
            {
                return Integer.toString(count);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error!!\n" + e.toString());
        }
        return null;
    }
    private void tambahPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahPelangganActionPerformed
        idPelanggan.setText("PLGN-"+getLastID());
        
        
        boolean benar = true;
        if(idPelanggan.getText().equals("") || namaPelanggan.getText().equals("") || provinsiPelanggan.getText().equals("") || noHpPelanggan.equals("")){
                JOptionPane.showMessageDialog(this,
                        "Masukkan data dengan benar!");
                benar = false;
        }
        if(benar){
            DBConnect connection = new DBConnect();
            try {

                String query  = "INSERT INTO Pelanggan VALUES('" + idPelanggan.getText() + "','"
                    + namaPelanggan.getText() + "','"
                    + alamatPelanggan.getText() + "','"
                    + provinsiPelanggan.getText() + "','"
                    + noHpPelanggan.getText() + "')";

                connection.pstat = connection.conn.prepareStatement(query);
                connection.pstat.executeUpdate();
                connection.conn.close();
                tampilData();

                idPelanggan.setText("");
                namaPelanggan.setText("");
                noHpPelanggan.setText("");
                alamatPelanggan.setText("");
                provinsiPelanggan.setText("");
                JOptionPane.showMessageDialog(null, "Simpan Berhasil");
          } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Simpan Gagal : "+e.toString());
          }
        }
        
    }//GEN-LAST:event_tambahPelangganActionPerformed

    private void tabelPelangganMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelPelangganMouseClicked
        int i = tabelPelanggan.getSelectedRow();
        
        if(i==-1){
            return;
        }
        
        idPelanggan.setText(tabelPelanggan.getValueAt(i, 0).toString());
        namaPelanggan.setText(tabelPelanggan.getValueAt(i, 1).toString());
        alamatPelanggan.setText(tabelPelanggan.getValueAt(i, 2).toString());
        provinsiPelanggan.setText(tabelPelanggan.getValueAt(i, 3).toString());
        noHpPelanggan.setText(tabelPelanggan.getValueAt(i, 4).toString());
        
        tambahPelanggan.setEnabled(false);
        ubahPelanggan.setEnabled(true);
        //hapusPelanggan.setEnabled(true);
    }//GEN-LAST:event_tabelPelangganMouseClicked

    private void ubahPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahPelangganActionPerformed
        DBConnect connection = new DBConnect();
        try {
    
    String query = "UPDATE Pelanggan set " 
        + "ID='"       + idPelanggan.getText() + "', "
        + "Nama='"      + namaPelanggan.getText() + "', "
        + "No Hp='"   + noHpPelanggan.getText() + "', "
        + "Alamat='"        + alamatPelanggan.getText() + "', "
        + "Provinsi='"    + provinsiPelanggan.getText() + "'";
    
    connection.pstat = connection.conn.prepareStatement(query);
    connection.pstat.executeUpdate();
    
    connection.conn.close();
    tampilData();
    JOptionPane.showMessageDialog(null, "Update Berhasil");
    reset();
  } catch (Exception e) {
    e.printStackTrace();
  }
    }//GEN-LAST:event_ubahPelangganActionPerformed

    private void resetbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbtnActionPerformed
        reset();
    }//GEN-LAST:event_resetbtnActionPerformed

    private void hapusPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusPelangganActionPerformed
//        try {
//    int jawab;
//    
//    if ((jawab = JOptionPane.showConfirmDialog(null, "Ingin menghapus data?", "konfirmasi", JOptionPane.YES_NO_OPTION)) == 0) {
//      st = cn.createStatement();
//      st.executeUpdate("DELETE FROM Pelanggan WHERE ID='"
//          + tabModel.getValueAt(tabelPelanggan.getSelectedRow(), 0) + "'");
//      tampilData("");
//      reset();
//    }
//  } catch (Exception e) {
//    e.printStackTrace();
//  }
    }//GEN-LAST:event_hapusPelangganActionPerformed

    private void noHpPelangganKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_noHpPelangganKeyTyped
        // TODO add your handling code here:
        FilterAngka(evt);
        if(noHpPelanggan.getText().length()==13){
            evt.consume();
        }
    }//GEN-LAST:event_noHpPelangganKeyTyped

    private void noHpPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noHpPelangganActionPerformed
        // TODO add your handling code here:
        if(noHpPelanggan.getText().length()==13){
            
        }
    }//GEN-LAST:event_noHpPelangganActionPerformed

    private void namaPelangganKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_namaPelangganKeyTyped
    FilterHuruf(evt);
    if(namaPelanggan.getText().length()==50){
            evt.consume();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_namaPelangganKeyTyped

    private void alamatPelangganKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_alamatPelangganKeyTyped
    FilterHuruf(evt);
    if(alamatPelanggan.getText().length()==50){
            evt.consume();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_alamatPelangganKeyTyped

    private void provinsiPelangganKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_provinsiPelangganKeyTyped
    FilterHuruf(evt);
    if(provinsiPelanggan.getText().length()==25){
            evt.consume();
        }
// TODO add your handling code here:
    }//GEN-LAST:event_provinsiPelangganKeyTyped

    private void cariPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariPelangganActionPerformed
        // TODO add your handling code here:
        //menghapus seluruh data ditamp
        DBConnect connection = new DBConnect();
        tabModel.getDataVector().removeAllElements();

        //memberi tahu data telah kosong
        tabModel.fireTableDataChanged();

        try{
            connection.stat = connection.conn.createStatement();
            String query = "SELECT * FROM Pelanggan WHERE id_pelanggan LIKE '%" +
            idPelanggan.getText() + "%'";
            connection.result = connection.stat.executeQuery(query);
            //lakukan perbaris data
            while (connection.result.next()) {
                Object[] obj = new Object[5];
                obj[0] = connection.result.getString("id_pelanggan");
                obj[1] = connection.result.getString("nama_pelanggan");
                obj[2] = connection.result.getString("alamat_pelanggan");
                obj[3] = connection.result.getString("provinsi_pelanggan");
                obj[4] = connection.result.getString("no_telphone");

                tabModel.addRow(obj);
            }
            //jika di table tidak ada data yg dicari
            if(tabModel.getRowCount() == 0){
                JOptionPane.showMessageDialog(this, "Data tidak ditemukan");
            }
            connection.stat.close();
            connection.result.close();
        }
        catch(Exception e){
            System.out.println("Terjadi error saat load Data Jenis Paket: "+e);
        }
    }//GEN-LAST:event_cariPelangganActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pelanggan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pelanggan(false).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alamatPelanggan;
    private javax.swing.JButton cariPelanggan;
    private javax.swing.JButton hapusPelanggan;
    private javax.swing.JTextField idPelanggan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kembaliPelanggan;
    private javax.swing.JTextField namaPelanggan;
    private javax.swing.JTextField noHpPelanggan;
    private javax.swing.JTextField provinsiPelanggan;
    private javax.swing.JToggleButton resetbtn;
    private javax.swing.JTable tabelPelanggan;
    private javax.swing.JButton tambahPelanggan;
    private javax.swing.JButton ubahPelanggan;
    // End of variables declaration//GEN-END:variables
}
