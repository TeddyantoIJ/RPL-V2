/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TransaksiPengirimanBarang;

import List.*;
import MainMenu.MainMenuStaffKirim;
import connection.DBConnect;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author user
 */
public class Sortir extends javax.swing.JFrame {

    /**
     * Creates new form Sortir
     */
    DefaultTableModel model;
    
    
    public Sortir() {
        initComponents();
        
        model = new DefaultTableModel();
        addColomn();
        tblBarang.setModel(model);
        tampilKota();
        btnGrup.add(rbBelum);
        btnGrup.add(rbTerkirim);
    }
    
    public void addColomn() {
        model.addColumn("ID Connote");
        model.addColumn("Jenis Barang");
        model.addColumn("Nama Penerima");
        model.addColumn("Kota Penerima");
    }

    //model = new DefaultTableModel();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrup = new javax.swing.ButtonGroup();
        btnKembali = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rbTerkirim = new javax.swing.JRadioButton();
        cmbKota = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        rbBelum = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBarang = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnKembali.setText("Kembali");
        btnKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKembaliActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("List Barang");

        rbTerkirim.setBackground(new java.awt.Color(102, 102, 102));
        rbTerkirim.setForeground(new java.awt.Color(255, 255, 255));
        rbTerkirim.setText("Terkirim");
        rbTerkirim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbTerkirimMouseClicked(evt);
            }
        });
        rbTerkirim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTerkirimActionPerformed(evt);
            }
        });

        cmbKota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbKotaActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Kota");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Status");

        rbBelum.setBackground(new java.awt.Color(102, 102, 102));
        rbBelum.setForeground(new java.awt.Color(255, 255, 255));
        rbBelum.setText("Belum Terkirim");
        rbBelum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbBelumMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rbTerkirim)
                                .addGap(18, 18, 18)
                                .addComponent(rbBelum))
                            .addComponent(cmbKota, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(242, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbKota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(rbTerkirim)
                    .addComponent(rbBelum))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        tblBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblBarang);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnKembali)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(btnKembali)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKembaliActionPerformed
        // TODO add your handling code here:
        
        this.setVisible(false);
        
    }//GEN-LAST:event_btnKembaliActionPerformed

    private void rbTerkirimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbTerkirimMouseClicked
        // TODO add your handling code here:
        model.getDataVector().removeAllElements();

        model.fireTableDataChanged();
        try{
            DBConnect c = new DBConnect();
            c.stat = c.conn.createStatement();
            String sql = "SELECT * FROM Connote join DataBarangPelanggan  on Connote.id_pemesanan = DataBarangPelanggan.id_pemesanan where status_barang = 'Terkirim'";
            c.result = c.stat.executeQuery(sql);
            
            while (c.result.next()) {
                    Object[] obj = new Object[4];
                    obj[0] = c.result.getString("id_connote");
                    obj[1] = c.result.getString("jenis_barang");
                    obj[2] = c.result.getString("nama_penerima");
                    obj[3] = c.result.getString("alamat_penerima");

                    model.addRow(obj);

            }
            c.stat.close();
            c.result.close();  
        } catch (SQLException ex){
            System.out.println("Terjadi error"+ex);
        }
    }//GEN-LAST:event_rbTerkirimMouseClicked

    private void rbBelumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbBelumMouseClicked
        // TODO add your handling code here:
        model.getDataVector().removeAllElements();

        model.fireTableDataChanged();
        try{
            DBConnect c = new DBConnect();
            c.stat = c.conn.createStatement();
            String sql = "select c.id_connote, d.jenis_barang, d.nama_penerima, d.kota_penerima from Connote c inner join DataBarangPelanggan d on c.id_pemesanan = d.id_pemesanan where c.status_pengiriman = 'Belum' and d.kota_penerima ='"+cmbKota.getSelectedItem()+"'";
            c.result = c.stat.executeQuery(sql);
            
            while (c.result.next()) {
                    Object[] obj = new Object[4];
                    obj[0] = c.result.getString("id_connote");
                    obj[1] = c.result.getString("jenis_barang");
                    obj[2] = c.result.getString("nama_penerima");
                    obj[3] = c.result.getString("kota_penerima");

                    model.addRow(obj);

            }
            c.stat.close();
            c.result.close();  
        } catch (SQLException ex){
            System.out.println("Terjadi error"+ex);
        }
    }//GEN-LAST:event_rbBelumMouseClicked

    private void rbTerkirimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTerkirimActionPerformed
        // TODO add your handling code here:
        rbBelum.setSelected(false);
        if (rbTerkirim.isSelected() == true) {
                    model.getDataVector().removeAllElements();

        model.fireTableDataChanged();
        try{
                DBConnect c = new DBConnect();
                c.stat = c.conn.createStatement();
                String sql = "select c.id_connote, d.jenis_barang, d.nama_penerima, d.kota_penerima from Connote c inner join DataBarangPelanggan d on c.id_pemesanan = d.id_pemesanan where c.status_pengiriman = 'Belum' and d.kota_penerima ='"+cmbKota.getSelectedItem()+"'";
                c.result = c.stat.executeQuery(sql);
                
                while (c.result.next()) {
                        Object[] obj = new Object[4];
                        obj[0] = c.result.getString("id_connote");
                        obj[1] = c.result.getString("jenis_barang");
                        obj[2] = c.result.getString("nama_penerima");
                        obj[3] = c.result.getString("kota_penerima");

                        model.addRow(obj);

                }
                c.stat.close();
                c.result.close();  
            } catch (SQLException ex){
                System.out.println("Terjadi error"+ex);
            }
        } else {
            rbTerkirim.setSelected(true);
        }
    }//GEN-LAST:event_rbTerkirimActionPerformed

    private void cmbKotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbKotaActionPerformed
        // TODO add your handling code here:
        model.getDataVector().removeAllElements();

        model.fireTableDataChanged();
        try{
            DBConnect c = new DBConnect();
            c.stat = c.conn.createStatement();
            String sql = "select c.id_connote, d.jenis_barang, d.nama_penerima, d.kota_penerima from Connote c inner join DataBarangPelanggan d on c.id_pemesanan = d.id_pemesanan where c.status_pengiriman = 'Belum' and d.kota_penerima ='"+cmbKota.getSelectedItem()+"'";
            c.result = c.stat.executeQuery(sql);
            
            while (c.result.next()) {
                    Object[] obj = new Object[4];
                        obj[0] = c.result.getString("id_connote");
                        obj[1] = c.result.getString("jenis_barang");
                        obj[2] = c.result.getString("nama_penerima");
                        obj[3] = c.result.getString("kota_penerima");

                    model.addRow(obj);

            }
            c.stat.close();
            c.result.close();  
        } catch (SQLException ex){
            try{
            DBConnect c = new DBConnect();
            c.stat = c.conn.createStatement();
            String sql = "select c.id_connote, d.jenis_barang, d.nama_penerima, d.kota_penerima from Connote c inner join DataBarangPelanggan d on c.id_pemesanan = d.id_pemesanan where c.status_pengiriman = 'Belum'";
            c.result = c.stat.executeQuery(sql);
            
            while (c.result.next()) {
                    Object[] obj = new Object[4];
                        obj[0] = c.result.getString("id_connote");
                        obj[1] = c.result.getString("jenis_barang");
                        obj[2] = c.result.getString("nama_penerima");
                        obj[3] = c.result.getString("kota_penerima");

                    model.addRow(obj);

            }
            c.stat.close();
            c.result.close();  
            System.out.println("Terjadi error"+ex);
            }
            catch(Exception e){
                
            }
        }
    }//GEN-LAST:event_cmbKotaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sortir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sortir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sortir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sortir.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sortir().setVisible(true);
            }
        });
    }
    
    private void tampilKota(){
        try{
            DBConnect c = new DBConnect();
            c.stat = c.conn.createStatement();
            String sql = "select * from KotaKabupaten";
            c.result = c.stat.executeQuery(sql);
            
            while (c.result.next()) {
                //cmbPelanggan.addItem(c.result.getString("ID_Pelanggan"));               
                    cmbKota.addItem(c.result.getString("nama_kota"));
            }
            c.stat.close();
            c.result.close();  
        } catch (SQLException ex){
            System.out.println("Terjadi error"+ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btnGrup;
    private javax.swing.JButton btnKembali;
    private javax.swing.JComboBox<String> cmbKota;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbBelum;
    private javax.swing.JRadioButton rbTerkirim;
    private javax.swing.JTable tblBarang;
    // End of variables declaration//GEN-END:variables
}
